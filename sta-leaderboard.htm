<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Top 100 XP Leaderboard</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://huntingstats378.github.io/HuntingStats378/main/assets/ess/odometer.css"
      rel="stylesheet"
    />
    <script src="https://huntingstats378.github.io/HuntingStats378/main/assets/ess/odometer.js"></script>
    <style>
      body {
        margin: 0;
        padding: 0;
        background-color: #121212;
        color: #e0e0e0;
        font-family: 'Poppins', sans-serif;
        line-height: 1.6;
      }

      h1 {
        text-align: center;
        font-size: 2.75rem;
        margin: 2rem 0 1.5rem;
        color: #ffb300;
        text-shadow: 0 0 10px rgba(255, 179, 0, 0.5);
      }

      #userList {
        max-width: 1000px;
        margin: 0 auto;
        padding: 0 20px 50px;
        display: flex;
        flex-direction: column;
        gap: 20px;
      }

      .user-card {
        display: flex;
        align-items: center;
        background: #1e1e1e;
        padding: 20px;
        border-radius: 14px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        gap: 20px;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      }

      .user-card:hover {
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
      }

      .rank {
        font-size: 2rem;
        font-weight: 500;
        width: 60px;
        text-align: center;
        color: #ddd;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      }

      .rank.gold {
        color: gold;
        text-shadow: 1px 1px 4px rgba(255, 215, 0, 0.7);
      }

      .rank.silver {
        color: silver;
        text-shadow: 1px 1px 4px rgba(192, 192, 192, 0.7);
      }

      .rank.bronze {
        color: #cd7f32;
        text-shadow: 1px 1px 4px rgba(205, 127, 50, 0.7);
      }

      .avatar {
        width: 72px;
        height: 72px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #ffb300;
        box-shadow: 0 0 8px rgba(255, 179, 0, 0.5);
      }

      .user-info {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 8px;
      }

      .username {
        font-size: 1.3rem;
        font-weight: 700;
        color: #fff;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
      }

      .odometer {
        font-size: 1.6rem;
        color: #ffdd4a;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      }

      .progress-container {
        background: #333;
        border-radius: 10px;
        overflow: hidden;
        height: 12px;
        width: 100%;
        margin-top: 6px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.4);
      }

      .progress-bar {
        height: 100%;
        background: linear-gradient(90deg, #ff8f00, #ffdd4a);
        transition: width 0.3s ease-out;
      }

      .xp-labels {
        font-size: 0.9rem;
        color: #bbb;
        display: flex;
        justify-content: space-between;
      }

      #loadingMsg {
        text-align: center;
        color: #999;
        font-size: 1.2rem;
        padding: 2rem;
        font-style: italic;
      }

      @media (max-width: 600px) {
        h1 {
          font-size: 2rem;
        }

        .user-card {
          flex-direction: column;
          align-items: flex-start;
          padding: 15px;
        }

        .rank {
          width: auto;
          font-size: 1.5rem;
          margin-bottom: 10px;
        }

        .avatar {
          width: 60px;
          height: 60px;
        }

        .odometer {
          font-size: 1.4rem;
        }

        .xp-labels {
          font-size: 0.8rem;
        }
      }
    </style>
  </head>

  <body>
    <h1>Top 100 XP Leaderboard</h1>
    <div id="userList"><p id="loadingMsg">Loading...</p></div>

    <script>
      function totalXPToLevel(level) {
        return (level * (2 * 75 + (level - 1) * 100)) / 2;
      }

      function getTotalXP(level, currentXP) {
        return Math.round(totalXPToLevel(level) + currentXP);
      }

      function getNextLevelXP(level) {
        return 75 + level * 100;
      }

      function formatRank(rank) {
        let rankClass = '';
        if (rank === 1) {
          rankClass = 'gold';
        } else if (rank === 2) {
          rankClass = 'silver';
        } else if (rank === 3) {
          rankClass = 'bronze';
        }
        return `<span class="rank ${rankClass}">#${rank}</span>`;
      }

      function getAvatarURL(userId, avatarHash) {
        return `https://cdn.discordapp.com/avatars/${userId}/${avatarHash}.png?size=128`;
      }

      async function fetchAndRender() {
        const container = document.getElementById('userList');
        const loading = document.getElementById('loadingMsg');

        try {
          const res = await fetch(
            'https://huntingstats378.onrender.com/api/discord/statistics/top100'
          );
          const users = await res.json();

          users.sort(
            (a, b) => getTotalXP(b.level, b.xp) - getTotalXP(a.level, a.xp)
          );

          container.innerHTML = '';

          users.forEach((user, index) => {
            const totalXP = getTotalXP(user.level, user.xp);
            const nextLevelXP = getNextLevelXP(user.level);
            const progressPercent = Math.min(
              100,
              (user.xp / nextLevelXP) * 100
            );

            const card = document.createElement('div');
            card.className = 'user-card';
            card.innerHTML = `
            ${formatRank(index + 1)}
            <img class="avatar" src="${getAvatarURL(
              user.id,
              user.avatar
            )}" alt="${user.username}" />
            <div class="user-info">
              <div class="username">${user.username}</div>
              <div class="odometer" id="xp-${user.id}">0</div>
              <div class="xp-labels">
                <span>Level ${user.level}</span>
                <span>${user.xp.toLocaleString()} / ${nextLevelXP.toLocaleString()} XP</span>
              </div>
              <div class="progress-container">
                <div class="progress-bar" style="width: ${progressPercent}%"></div>
              </div>
            </div>
          `;
            container.appendChild(card);
          });

          setTimeout(() => {
            users.forEach(user => {
              const totalXP = getTotalXP(user.level, user.xp);
              const xpEl = document.getElementById(`xp-${user.id}`);
              if (xpEl) xpEl.innerHTML = totalXP.toLocaleString();
            });
          }, 300);
        } catch (err) {
          console.error('Failed to fetch data:', err);
          loading.innerText = 'Failed to load leaderboard.';
        }
      }

      fetchAndRender();
      setInterval(fetchAndRender, 60000);
    </script>
  </body>
</html>
